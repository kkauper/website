@import url('../dist/css/_reset.min.css');
@import url('../dist/css/_font.min.css');
@import url('../dist/css/_root.min.css');


img[height] {
    height: auto;
}

*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    cursor: none;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    -webkit-tap-highlight-color: transparent;

    @media screen and (max-width: 767px)
    {
        cursor: initial;
    }
}

html
{
    font-size: 10px;
    max-width: 100vw;
    overflow-x: hidden;
    background-color: var(--green);
    --vh: 1vh;
}


body
{
    position: relative;
    font-family: var(--font-sans), var(--font-fallback);
    background-color: var(--green);
    color: var(--white);
    fonz-size: 10px;
    line-height: 1.25;
    max-width: 100vw;
    min-height: 100%;
    font-weight: 400;

    &.nav-hover
    {
      .cursor
      {
        background: var(--green);
      }

      .cursor-follower
      {
        border-color: var(--green);

        &.active
        {
          border-color: var(--black);
        }
      }
    }
}

.cursor {
    display: none;
    position: fixed;
    width: 10px;
    height: 10px;
    border-radius: 100%;
    background: var(--light-grey);
    transition: 0.3s cubic-bezier(0.75, -1.27, 0.3, 2.33) transform, 0.2s cubic-bezier(0.75, -0.27, 0.3, 1.33) opacity, 0.3s cubic-bezier(0.75, -0.27, 0.3, 1.33) background;
    user-select: none;
    pointer-events: none;
    z-index: 10000;
    transform: scale(1);

    &.active
    {
        opacity: 1;
        transform: scale(0);
    }

    @media screen and (min-width: 768px)
    {
        display: block;
    }
}

.cursor-follower {
    display: none;
    position: fixed;
    width: 45px;
    height: 45px;
    border: 0.175rem solid var(--light-grey);
    border-radius: 100%;
    transition: 0.6s cubic-bezier(0.75, -1.27, 0.3, 2.33) transform, 0.2s cubic-bezier(0.75, -0.27, 0.3, 1.33) opacity, 0.2s cubic-bezier(0.75, -0.27, 0.3, 1.33) background, 0.2s cubic-bezier(0.75, -0.27, 0.3, 1.33) border;
    user-select: none;
    pointer-events: none;
    z-index: 10000;
    transform: translate(-5px, -5px) scale(0.6666667);

    &.active
    {
        border: 1px solid var(--white);
        opacity: 1;
        transform: scale(1);
    }

    @media screen and (min-width: 768px)
    {
        display: block;
    }
}

nav.main-nav
{
  position: fixed;
  left: 50%;
  right: auto;
  bottom: 20px;

  display: flex;

  width: calc(100% - 48px);
  max-width: 1345px;

  background-color: #fff;
  border-radius: 4px;
  margin: 0 auto;

  transform: translateX(-50%);

  transition: all .2s ease;
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, .2);
  z-index: 100;

  ul
  {
    display: flex;
    justify-content: space-between;
    width: 100%;
    list-style: none;
    padding: 0;

    li
    {
      display: flex;
      align-items: center;
      margin: 0;

      &.mobile-nav
      {
        display: none;
      }

      a
      {
        font-size: 1.8rem;
        color: var(--black);
        text-decoration: none;
        padding: var(--nav-padding-tb) var(--nav-padding-sides);

        span
        {
          position: relative;
          display: flex;
        }

        &.logo
        {
          display: flex;
          justify-content: flex-start;
          align-items: center;
          height: calc(24px + (var(--nav-padding-tb) * 2));
          width: calc(27.1582px + (var(--nav-padding-sides) * 2));
          margin: 0;

          img
          {
            display: block;
            width: 27.1582px;
            height: 24px;
          }
        }
      }
    }
  }

  @media screen and (max-width: 767px)
  {
    ul
    {
      li
      {
        display: none;

        &.logo
        {
          display: block;
        }

        &.mobile-nav
        {
          display: flex;
          align-items: center;
          padding: var(--nav-padding-tb) var(--nav-padding-sides);

          button.mobile-nav-button
          {
            position: relative;
            display: flex;
            flex-direction: column;
            justify-content: space-between;

            width: 3.5rem;
            height: 2rem !important;
            padding: 0.25rem;
            margin: 0 -0.25rem;

            box-sizing: content-box;

            cursor: pointer !important;
            color: var(--black);
            height: 0.84em;
            outline: 0;

            & > span
            {
              display: block;
              overflow: hidden;

              & > span
              {
                display: block;
                padding-top: 0.04em;
                transition: 1.25s transform var(--ease-in-out-quint);
                transform: none !important;

                svg
                {
                  width: 100%;
                  height: 100%;
                  fill: currentColor;
                  overflow: visible;

                  g
                  {
                    transition: .1s opacity var(--ease-in-out-sine);

                    &.close
                    {
                      opacity: 0;
                    }

                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

body.nav-open
{
  nav.main-nav
  {
    ul
    {
      li.mobile-nav
      {
        button.mobile-nav-button
        {
          & > span
          {
            & > span
            {
              svg
              {
                g
                {
                  &.hamburger
                  {
                    opacity: 0;
                  }

                  &.close
                  {
                    opacity: 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}


main
{
  max-width: var(--max-width);
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(2,1fr);
  grid-gap: var(--row-gap) var(--gap);
  gap: var(--row-gap) var(--gap);
  padding: var(--padding-top) calc(var(--padding) + var(--safe-area-inset-right)) var(--padding-bottom) calc(var(--padding) + var(--safe-area-inset-left));

  @media screen and (min-width: 600px)
  {
    grid-template-columns: repeat(3,1fr);
  }

  a
  {
    position: relative;
    display: grid;
    gap: var(--gap);
    grid-template-rows: auto 1fr;
    grid-template-areas:
        "image image"
        "meta meta";
    border-radius: var(--radius);
    outline: 0;
    text-decoration: none;

    & > .image
    {
      grid-area: image;
      position: relative;
      width: 100%;
      height: 0;
      padding-top: 112%;
      border-radius: var(--radius);
      overflow: hidden;
      will-change: transform;

      img
      {
        position: absolute;
        top: -2.5%;
        left: -2.5%;
        width: 105%;
        height: 105%;
        object-fit: cover;
        border-radius: var(--radius);
        transition: .5s transform var(--ease-out-cubic);
      }
    }

    & > .meta
    {
      grid-area: meta;

      position: relative;
      display: flex;
      align-items: flex-start;
      justify-content: space-between;
      gap: var(--gap);

      span
      {
        display: block;
        color: var(--white);
        font-weight: 700;
        font-size: 1.8rem;
        line-height: 1;
        text-transform: uppercase;

        &.title
        {
          white-space: pre-line;
        }

        &.description
        {
          white-space: pre-line;
        }

        &.year
        {
          grid-area: year;
        }
      }
    }

    &.large
    {
      grid-column: span 2;

      & > .image
      {
        padding-top: 63%;

        @media only screen and (min-width: 600px)
        {
          padding-top: calc(56% - var(--gap)/ 2);
        }
      }
    }

    &.full
    {
      grid-column: span 3;
      grid-template-columns: repeat(3,1fr);
      grid-template-areas:
          "label image image"
          "meta image image";
      grid-gap: 0;
      gap: 0;
      padding: var(--border);
      background-color: currentColor;

      & > .image
      {
        padding-top: calc(110% - var(--border));
      }

      & > p.label
      {
        position: relative;
        grid-area: label;
        padding: calc(var(--border)*2) var(--border) 0 calc(var(--border)*2);
      }

      & > .meta
      {
        grid-area: meta;
      }

      @media screen and (min-width: 600px)
      {
        --border: 2rem;

        & > .image
        {
          padding-top: 88%;
        }
      }
    }

    @media (hover: hover) and (pointer: fine)
    {
      &:hover .image img
      {
        transform: scale(.955);
      }
    }
  }
}